let importCode = `import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\n// Import angular-froalacharts\nimport { FroalaChartsModule } from 'angular-froalacharts';\n\n// Import FroalaCharts library\nimport * as FroalaCharts from 'froalacharts';\n\n// Load FroalaCharts Individual Charts\n// Add other dependecies like Charts, PowerCharts, Widgets, Maps\n// import FroalaTheme from 'froalacharts/themes/fusioncharts.theme.fusion';\n\n\n\n// Use fcRoot function to inject FroalaCharts library, and the modules \n// you want to use\n//FroalaChartsModule.fcRoot(FroalaCharts, [Comma separated charts and features]) \nFroalaChartsModule.fcRoot(FroalaCharts)\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FroalaChartsModule // Include in imports\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }`;
let installCode = '$ npm install angular-froalacharts --save';
let installFroalaCharts = '$ npm install froalacharts --save';
let useDirective = `import { Component } from '@angular/core';\n\n@Component({\n    selector: 'my-app',\n    template: \`<froalacharts\n      width="500" \n      height="300"\n      type="column"\n      dataFormat="json"\n      [dataSource]="data" >\n    </froalacharts>\n  \`,\n})\nexport class AppComponent {\n  data: Object;\n  \n  constructor() {\n    this.data = {\n      chart: { },\n      data: [\n        {value: 500},\n        {value: 600},\n        {value: 700}\n      ]\n    };\n  }\n}`;
let renderFroalaMaps = `import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\n\n// Import FroalaChartsModule from angular-froalacharts\nimport { FroalaChartsModule } from 'angular-froalacharts';\n\n// Import FroalaCharts library\nimport * as FroalaCharts from 'froalacharts';\n\n// Use FroalaChartsModule.fcRoot(FroalaCharts, [Comma separated modules])\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, \n    FroalaChartsModule // Include in the imports\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }`;
let mapHtml = `<!-- in app.component.html -->\n<froalacharts\n type="world"\n width="800"\n height="500"\n dataFormat="json">\n</froalacharts>`;
let setupFroalaTime = `// app.module.ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n// Import angular-froalacharts\nimport { FroalaChartsModule } from 'angular-froalacharts';\n// Import FroalaCharts library and chart modules\nimport * as FroalaCharts from 'froalacharts';\n// Pass the froalacharts library and chart modules\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    // Specify FroalaChartsModule as import\n    FroalaChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}`;
let froalaTimeComponentCode = `// In app.component.ts\nimport { Component } from '@angular/core';\nimport * as FroalaCharts from 'froalacharts';\nconst dataUrl =\n  'https://raw.githubusercontent.com/fusioncharts/dev_centre_docs/master/assets/datasources/fusiontime/online-sales-single-series-area-data-plot/data.json';\nconst schemaUrl =\n  'https://raw.githubusercontent.com/fusioncharts/dev_centre_docs/master/assets/datasources/fusiontime/online-sales-single-series-area-data-plot/schema.json';\n@Component({\n  selector: 'app',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  dataSource: any;\n  type: string;\n  width: string;\n  height: string;\n  constructor() {\n    this.type = 'timeseries';\n    this.width = '400';\n    this.height = '400';\n    this.dataSource = {\n      data: null,\n      yAxis: {\n        plot: [{ value: 'Sales' }]\n      },\n      caption: {\n        text: 'Online Sales of a SuperStore in the US'\n      }\n    };\n    this.fetchData();\n  }\n  fetchData() {\n    let jsonify = res => res.json();\n    let dataFetch = fetch(dataUrl).then(jsonify);\n    let schemaFetch = fetch(schemaUrl).then(jsonify);\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      let data = res[0];\n      let schema = res[1];\n      let froalaTable = new FroalaCharts.DataStore().createDataTable(\n        data,\n        schema\n      ); // Instance of DataTable to be passed as data in dataSource\n      this.dataSource.data = froalaTable;\n    });\n  }\n}`;
let froalaTimeTemplateCode = `<div>\n  <froalacharts\n    [type]="type"\n    [width]="width"\n    [height]="height"\n    [dataSource]="dataSource"\n  ></froalacharts>\n</div>`;

export default {
  importCode,
  installCode,
  installFroalaCharts,
  useDirective,
  renderFroalaMaps,
  mapHtml,
  setupFroalaTime,
  froalaTimeComponentCode,
  froalaTimeTemplateCode
};
